//
// Massive utility generator
// ==========================================================================

//
// Following list defines which properties will be available for using by the utility (.u-) namespace.
// Frist value works a a configuration value in order to set responsive behavior.
//

$utilities: (
  "float":                    responsive_true      left right none,
  "clear":                    responsive_false     left right both,
  "text-align":               responsive_true      center left right,
  "text-decoration":          responsive_false     line-through none,
  "font-weight":              responsive_false     300 800 400,
  "list-style":               responsive_false     none,
  "margin-left":              responsive_false     auto,
  "margin-right":             responsive_false     auto,
  "position":                 responsive_false     absolute relative fixed,
  "overflow":                 responsive_false     hidden,
  "display":                  responsive_false     block inline-block inline none table table-cell,
  "vertical-align":           responsive_false     middle bottom,
  "border-radius":            responsive_false     0
);

@each $i, $property in $utilities {

  //
  // @for statement starts with 2 in order to get ride of first value
  // that is a responsive behaviour setting but not a valid declaration value.
  //

  @for $n from 2 through length($property) {
    .u-#{$i}--#{nth($property, $n)} {
      #{$i}: nth($property, $n);
    }

    @if nth($property, 1) == responsive_true {
      .u-#{$i}--#{nth($property, $n)} {
        @include mq(tablet) {
          &-at-tablet {
            #{$i}: nth($property, $n);
          }
        }

        @include mq(desktop) {
          &-at-desktop {
            #{$i}: nth($property, $n);
          }
        }

        @include mq(wide) {
          &-at-wide {
            #{$i}: nth($property, $n);
          }
        }
      }
    }
  }
}





//
//  Text decoration
// ==========================================================================

.u-text-decoration--none:hover {
  text-decoration: none;
}





//
//  Max widths
// ==========================================================================

$max-widths: 72 200 400 500 600 800 1024;

@each $mw in $max-widths {

  .u-max-width--#{$mw} {

    max-width: 1px * $mw;

    @include mq(tablet) {
      &-start {
        max-width: 1px * $mw;
      }
    }

    @include mq(desktop) {
      &-small {
        max-width: 1px * $mw;
      }
    }
  }
}





//
// Heights
// ==========================================================================

$heights: 100 75 50;

@each $h in $heights {
  .u-height--#{$h} {

    // scss-lint:disable ImportantRule
    height: 1% * $h !important;
  }
  .u-min-height--#{$h} {

    // scss-lint:disable ImportantRule
    min-height: 1% * $h !important;
  }
}





//
// Body and background colors
// ==========================================================================

@for $i from 1 through length($palette) {
  .u-color--#{"" + nth(map-keys($palette), $i)} {
    color: nth(map-values($palette), $i) !important;
  }
  .u-background--#{"" + nth(map-keys($palette), $i)} {
    background-color: nth(map-values($palette), $i) !important;
  }
  .u-fill--#{"" + nth(map-keys($palette), $i)} {
    fill: nth(map-values($palette), $i) !important;
  }
}


//
// CSS3 columns
// ==========================================================================

@for $i from 2 through 3 {
  @include mq(desktop) {
    // Autoprefixr can"t help here, so:
    // scss-lint:disable PropertySortOrder
    .u-css-columns-#{$i} {
      column-break-inside: avoid;
      column-count: $i;
      column-gap: $base-spacing-unit;
      -moz-column-break-inside: avoid;
      -webkit-column-break-inside: avoid;
      page-break-inside: avoid;

      > p {
        margin: 0;
      }
    }
  }

  @include mq(wide) {
    .u-css-columns-#{$i}--large {
      column-count: $i;
    }
  }
}



//
// Translations
// ==========================================================================
$translations: 100 50;

@each $t in $translations {
  .u-translate--#{$t} {
    transform: translateY(1% * $t);
  }

  .u-translate--#{$t}-n {
    transform: translateY(-1% * $t);
  }
}





//
// Line Height
// ==========================================================================
$line-heights: 100 125 150 200 300;

@each $ln in $line-heights {
  .u-line-height--#{$ln} {
    line-height: $ln / 100;
  }
}





//
// Positions
// ==========================================================================
$positions: top bottom left right;
$position-values: 20 40;

@each $p in $positions {
  .u-#{$p} {
    &--0 {
      #{$p}: 0;
    }

    @each $pv in $position-values {
      &--#{$pv} {
        #{$p}: 1px * $pv;
      }
    }
  }
}

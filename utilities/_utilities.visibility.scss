//
// Visibility utilities
// ==========================================================================

//
// This file generates a utility class for hide any element and show
// it after a breakpoint is reached.
//
// With the default $displays variables set values,
// these classes will be avaliable :
//
// .display-inherit-at-desktop
// .display-inherit-at-desktop
// .display-inherit-at-wide
// .display-block-at-desktop
// .display-block-at-desktop
// .display-block-at-wide
// .display-inline-block-at-desktop
// .display-inline-block-at-desktop
// .display-inline-block-at-wide
// .display-table-cell-at-desktop
// .display-table-cell-at-desktop
// .display-table-cell-at-wide
//
//
// Besides, this classes will hide the elements whet the
// breakpoint is reached:
//
// .hide-at-desktop
// .hide-at-desktop
// .hide-at-wide
//





$displays: inherit block inline-block table-cell !default;


// A selector for extend hidden (display:none) states of all
// classes sarting with format ".display-< value >-< breaqpoint >".
%display-none {
  display: none;
}

@each $breakpoint in $mq-breakpoints {
  $alias: nth($breakpoint, 1);

  @include mq($alias) {
    .display-at-#{$alias} {
      display: inherit;
    }
  }
}

@each $d in $displays {
  @each $breakpoint in $mq-breakpoints {
    $alias: nth($breakpoint, 1);

    .display-at-#{$d}-#{$alias} {
      @extend %display-none;

      @include mq($alias) {
        display: $d;
      }
    }
  }
}

@each $breakpoint in $mq-breakpoints {
  $alias: nth($breakpoint, 1);

  .hideat-at-#{$alias} {
    @include mq($alias) {
      display: none;
    }
  }
}
